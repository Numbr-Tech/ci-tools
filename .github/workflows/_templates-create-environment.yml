name: Create Environment

on:
  workflow_call:
    inputs:
      PROJECT_NAME:
        description: ''
        required: true
        type: string
      AZURE_LOCATION:
        description: ''
        required: false
        type: string
        default: 'francecentral'
      AZURE_VNET_NAME:
        description: ''
        required: false
        type: string
        default: ''
      AZURE_SUBNET_NAME:
        description: ''
        required: false
        type: string
        default: ''
      INFRA_ENV:
        description: ''
        required: false
        type: string
        default: "${{ github.ref_name == 'main' && 'production' || 'staging' }}"
    secrets:
      AZURE_CLIENT_ID:
        description: 'azure client id'
        required: true
      AZURE_TENANT_ID:
        description: 'azure tenant id'
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: 'azure subscription id'
        required: true
      AZURE_SUBSCRIPTION_ID_PPROD:
        description: 'azure subscription id pprod'
        required: true

jobs:
  create-environment:
    runs-on: ubuntu-latest
    env:
      AZURE_CONTAINERAPP_ENVIRONMENT_NAME: "cubber-dash-${{ inputs.INFRA_ENV }}-workspace"
      AZURE_SUBSCRIPTION_ID: ${{ inputs.INFRA_ENV == 'production' && secrets.AZURE_SUBSCRIPTION_ID || secrets.AZURE_SUBSCRIPTION_ID_PPROD }}
      AZURE_RESOURCE_GROUP: rg-frc-${{ inputs.PROJECT_NAME }}
    if: always()
    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Create Container App Environment if missing
        run: |
          echo "üîç Checking if Container App environment exists..."
          if az containerapp env show \
            --name "${{ inputs.AZURE_CONTAINERAPP_ENVIRONMENT_NAME }}" \
            --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
            --query "name" \
            --only-show-errors > /dev/null 2>&1; then
            echo "‚úÖ Container App environment '${{ inputs.AZURE_CONTAINERAPP_ENVIRONMENT_NAME }}' already exists"
          else
            echo "üèóÔ∏è Creating Container App environment '${{ inputs.AZURE_CONTAINERAPP_ENVIRONMENT_NAME }}'..."
            az containerapp env create \
                --name "${{ inputs.AZURE_CONTAINERAPP_ENVIRONMENT_NAME }}" \
                --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
                --location "${{ inputs.AZURE_LOCATION }}" \
                $([ -n "${{ inputs.AZURE_VNET_NAME }}" ] && [ -n "${{ inputs.AZURE_SUBNET_NAME }}" ] && echo "--infrastructure-subnet-resource-id \"/subscriptions/${{ env.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ inputs.AZURE_RESOURCE_GROUP }}/providers/Microsoft.Network/virtualNetworks/${{ inputs.AZURE_VNET_NAME }}/subnets/${{ inputs.AZURE_SUBNET_NAME}}\"")
            echo "‚úÖ Container App environment created successfully"
          fi
