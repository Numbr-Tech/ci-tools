name: deploy

on:
  workflow_call:
    inputs:
      PROJECT_NAME:
        description: 'Project name'
        required: true
        type: string
      AZURE_LOCATION:
        description: 'Azure location'
        required: false
        type: string
        default: 'francecentral'
      AZURE_SHARED_RESOURCE_GROUP:
        description: 'Azure shared resource group'
        required: false
        type: string
        default: 'rg-frc-pprodgeneral'
      IMAGE_TAG:
        description: 'Image tag'
        required: true
        type: string
      INGRESS_PORT:
        description: 'Ingress port'
        required: false
        type: string
        default: '8000'
      INGRESS_EXTERNAL:
        description: 'Ingress external'
        required: false
        type: boolean
        default: false
      RESOURCE_CPU:
        description: 'Resource CPU'
        required: false
        type: string
        default: '1'
      RESOURCE_MEMORY:
        description: 'Resource memory'
        required: false
        type: string
        default: '1Gi'
      SCALE_MIN_REPLICATS:
        description: 'Scale min replicats'
        required: false
        type: string
        default: '1'
      SCALE_MAX_REPLICATS:
        description: 'Scale max replicats'
        required: false
        type: string
        default: '1'
      SCALE_CONCURRENT_REQUEST:
        description: 'Scale concurrent request'
        required: false
        type: string
        default: '1'
      AZURE_VAULT_NAME:
        description: 'Azure vault name'
        required: false
        type: string
        default: 'vault-frc-iac'
      INFRA_ENV:
        description: 'Infra environment'
        required: true
        type: string
      DEBUG:
        description: 'Enable debug mode (verbose logs)'
        required: false
        type: boolean
        default: false
    secrets:
      AZURE_CLIENT_ID:
        description: 'GitHub App private key'
        required: true
      AZURE_TENANT_ID:
        description: 'azure tenant id'
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: 'azure subscription id'
        required: true
      AZURE_SUBSCRIPTION_ID_PPROD:
        description: 'azure subscription id pprod'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_REGISTRY_FQDN: ${{ inputs.INFRA_ENV == 'production' && 'nbtreg' || 'pprodnbtregistry-aucgecdkece6b5d7' }}.azurecr.io
      AZURE_CONTAINERAPP_ENVIRONMENT_NAME: ${{ inputs.PROJECT_NAME }}-${{ inputs.INFRA_ENV == 'production' && 'production' || 'staging' }}-workspace
      AZURE_SUBSCRIPTION_ID: ${{ inputs.INFRA_ENV == 'production' && secrets.AZURE_SUBSCRIPTION_ID || secrets.AZURE_SUBSCRIPTION_ID_PPROD }}
      AZURE_RESOURCE_GROUP: rg-frc-${{ inputs.PROJECT_NAME }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build containerapp.yaml
        run: |
          ls -la Infra
          sed -e "s|__PROJECT_NAME__|${{ inputs.PROJECT_NAME }}|g" \
              -e "s|__AZURE_LOCATION__|${{ inputs.AZURE_LOCATION }}|g" \
              -e "s|__AZURE_SUBSCRIPTION_ID__|${{ env.AZURE_SUBSCRIPTION_ID }}|g" \
              -e "s|__AZURE_SHARED_RESOURCE_GROUP__|${{ inputs.AZURE_SHARED_RESOURCE_GROUP }}|g" \
              -e "s|__AZURE_RESOURCE_GROUP__|${{ env.AZURE_RESOURCE_GROUP }}|g" \
              -e "s|__AZURE_CONTAINERAPP_ENVIRONMENT_NAME__|${{ env.AZURE_CONTAINERAPP_ENVIRONMENT_NAME }}|g" \
              -e "s|__AZURE_REGISTRY_FQDN__|${{ env.AZURE_REGISTRY_FQDN }}|g" \
              -e "s|__IMAGE_TAG__|${{ inputs.IMAGE_TAG }}|g" \
              -e "s|__INGRESS_PORT__|${{ inputs.INGRESS_PORT }}|g" \
              -e "s|__INGRESS_EXTERNAL__|${{ inputs.INGRESS_EXTERNAL }}|g" \
              -e "s|__RESOURCE_CPU__|${{ inputs.RESOURCE_CPU }}|g" \
              -e "s|__RESOURCE_MEMORY__|${{ inputs.RESOURCE_MEMORY }}|g" \
              -e "s|__SCALE_MIN_REPLICATS__|${{ inputs.SCALE_MIN_REPLICATS }}|g" \
              -e "s|__SCALE_MAX_REPLICATS__|${{ inputs.SCALE_MAX_REPLICATS }}|g" \
              -e "s|__SCALE_CONCURRENT_REQUEST__|${{ inputs.SCALE_CONCURRENT_REQUEST }}|g" \
              -e "s|__AZURE_VAULT_NAME__|${{ inputs.AZURE_VAULT_NAME }}|g" \
              -e "s|__INFRA_ENV__|${{ inputs.INFRA_ENV }}|g" \
              Infra/containerapp.yaml.tpl > Infra/containerapp.yaml
          cat Infra/containerapp.yaml

      - name: Upload containerapp.yaml artifact
        uses: actions/upload-artifact@v4
        with:
          name: containerapp-yaml
          path: Infra/containerapp.yaml

      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          azureCredentials: ${{ secrets.AZURE_CREDENTIALS }}
          containerAppName: ${{ inputs.PROJECT_NAME }}
          imageToDeploy: ${{ env.AZURE_REGISTRY_FQDN }}/${{ inputs.PROJECT_NAME }}:${{ inputs.IMAGE_TAG }}
          resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
          yamlConfigPath: ./Infra/containerapp.yaml
